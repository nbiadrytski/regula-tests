import { DetectFacePayload } from '../types/detect-face-payload-type';

export const detectFaceBasePayload = (): DetectFacePayload => {
	return {
		processParam: {
			onlyCentralFace: false,
			outputImageParams: {
				crop: {
					type: 1,
					size: [106, 134],
				},
			},
			attributes: {
				config: [
					{
						name: 'Age',
					},
					{
						name: 'EyeRight',
					},
					{
						name: 'EyeLeft',
					},
					{
						name: 'Emotion',
					},
					{
						name: 'Smile',
					},
					{
						name: 'Glasses',
					},
					{
						name: 'HeadCovering',
					},
					{
						name: 'ForeheadCovering',
					},
					{
						name: 'Mouth',
					},
					{
						name: 'MedicalMask',
					},
					{
						name: 'Occlusion',
					},
					{
						name: 'StrongMakeup',
					},
					{
						name: 'Headphones',
					},
				],
			},
		},
		image: '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',
	};
};
